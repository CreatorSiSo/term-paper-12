# Primitive Data Types

- C: _ISO/IEC 9899_, https://www.open-std.org/JTC1/SC22/WG14/www/docs/n2310.pdf [Vgl. @iso_9899_2018]
- C++: _ISO/IEC 14882_, https://www.open-std.org/JTC1/SC22/WG21/docs/papers/2022/n4910.pdf [Vgl. @iso_14882_2020]

## Boolean

- Definition [Vgl. @sebesta_2016. S. 265]
- work the same in almost all programming languages
- almost always called `true` and `false`
  - Python: `True` and `False`

## Numeric Types

### Integer

- Definition [Vgl. @sebesta_2016. S. 262f]
- Python ^[https://docs.python.org/3/library/stdtypes.html#numeric-types-int-float-complex]
  - size as large as needed
- PHP ^[https://www.php.net/manual/en/language.types.integer.php]
  - int
  - size platform dependent, 32bit\|64bit
- Java ^[https://docs.oracle.com/javase/specs/jls/se19/html/jls-4.html#jls-4.2]
- C, C++:
  - char, short, int, long are not always the same size
  - cstdint header: c++ standard S. 493f.
- Go ^[https://go.dev/ref/spec#Numeric_types]
- Zig (special case) ^[https://ziglang.org/documentation/master/#Integers]
  - arbitrary size
  - size 1--65535
  - i{Size} eg. i333
  - u{Size} eg. u8
- Rust ^[https://doc.rust-lang.org/reference/types/numeric.html#integer-types]

| Size [Bits] | Java  | C#            | C, C++              | Go              | Rust         |
| :---------: | ----- | ------------- | ------------------- | --------------- | ------------ |
|      8      | byte  | sbyte, byte   | int8_t, uint8_t     | int8, unit8     | i8, u8       |
|     16      | short | short, ushort | int16_t, uint16_t   | int16, uint16   | i16, u16     |
|     32      | int   | int, uint     | int32_t, uint32_t   | int32, uint32   | i32, u32     |
|     64      | long  | long, ulong   | int64_t, uint64_t   | int64, uint64   | i64, u64     |
|   32\|64    | ---   | nint, nuint   | ---                 | int, uint       | ---          |
|     128     | ---   | ---           | ---                 | ---             | i128, u128   |
|   pointer   | ---   | ---           | intptr_t, uintptr_t | intptr, uintptr | isize, usize |

: Supported integer formats {#tbl-int-formats tbl-colwidths="[16,10,16,23,19,16]"}

### Float

<!-- TODO Should I call this "Floating Point Numbers" insted? -->

Most languages provide floating point data types that adhere to the IEEE 754 - Floating-Point arithmetic standard [Vgl. @ieee754_2019] or its ISO adoption _ISO/IEC 60559_ [Vgl. @iso60559_2020] by default. As seen in @tbl-float-formats.

- IEEE 754
  - https://en.wikipedia.org/wiki/IEEE_754
  - active version is from 2019 [Vgl. @ieee754_2019]
  - https://ieeexplore.ieee.org/document/8766229
  - same as ISO/IEC 60559
- Accessed: 02.01.2023
  - Js: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number
  - Python: https://docs.python.org/3/library/stdtypes.html#typesnumeric
  - PHP: https://www.php.net/manual/en/language.types.float.php
  - Java: https://docs.oracle.com/javase/specs/jls/se19/html/jls-4.html#jls-4.2.3
  - Go: https://go.dev/ref/spec#Numeric_types
  - Rust: https://doc.rust-lang.org/reference/types/numeric.html#floating-point-types
- Accessed: 09.01.2023
  - C#
    - https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/types#837-floating-point-types
    - https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/floating-point-numeric-types
  - C, C++
    - C++ "The value representation of floating-point types is implementation-defined." S. 75
    - standards do not specific float format to use, they just mandate the minimum range and precision
    - https://en.cppreference.com/w/cpp/language/types

<!-- TODO: is float always `binary32` or can it be `decimal32` as well? -->

| Size [Bits] | Js/Ts  | Python | PHP   | Java   | C#     | C, C++ | Go      | Rust |
| :---------: | ------ | ------ | ----- | ------ | ------ | ------ | ------- | ---- |
|     32      | Number | ---    | ---   | float  | float  | ?      | float32 | f32  |
|     64      | ---    | ---    | ---   | double | double | ?      | float64 | f64  |
|   32\|64    | ---    | float  | float | ---    | ---    | ---    | ---     | ---  |

: Supported IEEE-754 floating point formats {#tbl-float-formats tbl-colwidths="[16,12,10,8,10,10,12,12,10]"}

### Decimal

- Pythony 09.01.2023
  - decimal.Decimal
  - The decimal module provides support for fast correctly rounded decimal floating point arithmetic.
  - Once constructed, Decimal objects are immutable.
  - https://docs.python.org/3/library/decimal.html

## Character

- Rym:
  - Name: char
  - valid utf-8 character
  - space: 1 byte?

| Language | Formats                  |
| -------: | ------------------------ |
|    Js/Ts | not supported            |
|   Python | not supported?           |
|      PHP | not supported?           |
|     Java | char: 16bit unsinged int |
|       C# | ?                        |
|      C++ | ?                        |
|        C | ?                        |
|       Go | ?                        |
|     Rust | `char`                   |

: Character data types {#tbl-chars tbl-colwidths="[15,85]"}

- Java: 09.01.2023 https://docs.oracle.com/javase/specs/jls/se19/html/jls-4.html#jls-4.2

## String

- Rym:
  - characters array: [char]
  - dynamic characters vector: String

```rym
const const_string: [char; 12] = "Hello World!"

impl Add for [char] {
  fn add(move self, move rhs: Self) -> Self {
    [..self, ..rhs]
    // or
    mut new_array = ['\0'; self.length + rhs.length]
    new_array[0..self.length] = self
    new_array[self.length..] = rhs
  }
}
```

{{< pagebreak >}}
