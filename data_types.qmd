# Data Types

## Primitive Data Type in some Languages

<!-- | Type     | JS/TS | Python | PHP | Java | C#  | C++ | C   | Go  | Rust |
| -------- | ----- | ------ | --- | ---- | --- | --- | --- | --- | ---- |
| bool     | yes   | yes    | yes | yes  | yes | yes | yes | yes | yes  |
| u8..u128 | no    | no     | no  | no   | no  | no  | no  | no  | yes  |
| i8..i128 | no    | no     | no  | no   | no  | no  | no  | no  | yes  |
| bigint   | yes   |
| string   | yes   | yes    | yes | yes  | yes | yes | yes | yes | yes  | -->

## Numbers

### Floating Point

All languages provide floating point data types that adhere to the _IEEE 754 - Floating-Point arithmetic standard_ or its ISO adoption _ISO/IEC 60559_ [Vgl. @iso60559_2020] by default.

Amet sit sunt quis dolor occaecat deserunt ad commodo quis adipisicing quis. Anim ad officia do et laboris ipsum eiusmod sit mollit adipisicing et. Ipsum exercitation Lorem irure aliqua in irure labore laboris cupidatat eiusmod sit ullamco cupidatat. Voluptate mollit veniam reprehenderit qui adipisicing in labore irure laborum excepteur eu cillum do. Nulla in ipsum nulla eiusmod ullamco nisi duis ut Lorem ipsum ut officia. Lorem excepteur sunt consectetur et anim nulla non ad magna. Nostrud commodo magna laboris anim mollit ullamco pariatur amet ut eu duis.

<!--
- IEEE 754
  - https://en.wikipedia.org/wiki/IEEE_754
  - active version is from 2019 [Vgl. @Ieee754:2019]
  - https://ieeexplore.ieee.org/document/8766229
  - same as ISO/IEC 60559
-->

<!-- TODO: is float always `binary32` or can ist be `decimal32` as well? -->

| Language  | Formats                                                               |
| --------: | --------------------------------------------------------------------- |
| Js/Ts     | `Number`: `binary64`                                                  |
| Python    |
| PHP       | `float`: platform dependent, usually `binary64`                       |
| Java      | `Float`: `binary32`, `Double`: `binary64`                             |
| C#        | `float`: `binary32`, `double`: `binary64`                             |
| C++       | `float`: `binary32`, `double`: `binary64`, `long double`: `binary128` |
| C         | `float`: `binary32`, `double`: `binary64`, `long double`: `binary128` |
| Go        | `float32`: `binary32`, `float64`: `binary64`                          |
| Rust      | `f32`: `binary32`, `f64`: `binary64`                                  |

* Accessed: 02.01.2023
  * Js: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number
  * Python: https://docs.python.org/3/library/stdtypes.html#typesnumeric
  * PHP: https://www.php.net/manual/en/language.types.float.php
  * Java: https://docs.oracle.com/javase/specs/jls/se19/html/jls-4.html#jls-4.2.3
  * C#: https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/types#837-floating-point-types
  * C++: https://en.cppreference.com/w/cpp/language/types
  * C: _ISO/IEC 9899:2018_, https://www.open-std.org/JTC1/SC22/WG14/www/docs/n2310.pdf
  * Go: https://go.dev/ref/spec#Numeric_types
  * Rust: https://doc.rust-lang.org/reference/types/numeric.html#floating-point-types

## Optionals as a replacement for null pointers

* https://www.lucidchart.com/techblog/2015/08/31/the-worst-mistake-of-computer-science/
* https://www.infoq.com/presentations/Null-References-The-Billion-Dollar-Mistake-Tony-Hoare/
* https://en.wikipedia.org/wiki/Tony_Hoare
