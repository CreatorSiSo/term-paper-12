# Introduction {#sec-intro}

<!--
Every year, numerous new programming languages are released.
A lot of them start out as parts of a scientific thesis, and in their spare time, both private individuals and students frequently work on their own languages to learn about various aspects of implementing them.
In some cases, businesses or organisations wish to address a specific issue, but the right technology is still missing.
Even though the majority of them are never used by the average developer, by trying out new ideas, they can generally bring all programming languages forward.
-->
Jedes Jahr werden zahlreiche neue Programmiersprachen veröffentlicht.
Viele von ihnen sind ursprünglich Teil einer wissenschaftlichen Arbeit, und sowohl Privatpersonen als auch Studierende arbeiten in ihrer Freizeit häufig an ihren eigenen Sprachen, um verschiedene Aspekte der Implementierung kennenzulernen.
In manchen Fällen möchten Unternehmen oder Organisationen ein bestimmtes Problem angehen, aber es fehlt noch die richtige Technologie.
Auch wenn die meisten von ihnen vom durchschnittlichen Entwickler nie benutzt werden, können sie durch das Ausprobieren neuer Ideen im Allgemeinen alle Programmiersprachen voranbringen.

<!--
A new language has the advantage of not being hindered by its own special circumstances that have evolved over time,
as was the case with many predecessors.
Since one can start from scratch on the implementation, but conceptually all knowledge from previous attempts is used,
completely new ideas can be tried out much easier and faster.
That process can be more difficult with a language that is used by thousands of people and should remain as stable as possible.
-->
Eine neue Sprache hat den Vorteil, dass sie nicht durch ihre eigenen, im Laufe der Zeit entstandenen Umstände behindert wird,
wie es bei vielen Vorgängern der Fall war.
Da man bei der Implementierung von Null anfangen kann, aber konzeptionell alles Wissen aus früheren Versuchen genutzt wird,
können völlig neue Ideen viel einfacher und schneller ausprobiert werden.
Bei einer Sprache, die von Tausenden von Menschen benutzt wird und möglichst stabil bleiben soll, kann dieser Prozess schwieriger sein.

<!--
Another advantage of small new projects is that there is less bureaucracy and coordination,
which makes it possible to iteratively try out many concepts quickly.
The coordination is quite important in larger projects,
as there are often many people working on them at the same time, and otherwise there would be little progress.
-->
Ein weiterer Vorteil kleiner neuer Projekte ist, dass es weniger Bürokratie und Koordination gibt,
was es ermöglicht, viele Konzepte schnell und iterativ auszuprobieren.
Die Koordination ist bei größeren Projekten sehr wichtig,
da oft viele Leute gleichzeitig an ihnen arbeiten und es sonst kaum Fortschritte geben würde.

<!--
If the resulting approaches of the "newcomers" seem to make sense and are adapted in other places,
this often results in an integration into older, more established languages.
Precisely such a language will be designed and implemented in the context of this paper by analysing generally advantageous characteristics, proven technologies, and combining them with new ideas.
-->
Wenn die daraus resultierenden Ansätze der "Neulinge" sinnvoll erscheinen und an anderen Stellen übernommen werden,
führt dies oft zu einer Integration in ältere, etabliertere Sprachen.
Genau eine solche Sprache wird im Rahmen dieser Arbeit entworfen und umgesetzt, indem allgemein vorteilhafte Eigenschaften und bewährte Technologien analysiert und mit neuen Ideen kombiniert werden.

<!--
This thesis therefore deals with the analysis of past as well as current programming languages in order to find out in which direction they are currently developing.
From the knowledge gained from this, a new language will be designed,
which should make a possible answer to the question: _What would a next generation programming language look like?_
 -->
Diese Arbeit beschäftigt sich daher mit der Analyse vergangener, sowie aktueller Programmiersprachen, um herauszufinden, in welche Richtung diese sich derzeit entwickeln.
Aus den daraus gewonnenen Erkenntnissen soll eine neue Sprache entworfen werden,
die eine mögliche Antwort auf die Frage geben soll: _Wie könnte eine Programmiersprache der nächsten Generation aussehen?_

<!--
- The goal of this paper is the conception and implementation of a new programming language called Rym

- What exactly is a programming language
  - artificial language
  - turing complete
  - general

1. general pros of programming languages
2. flaws of currently used programming languages
3. specific features of Rym based on 2. and adhearing to 1.
-->
